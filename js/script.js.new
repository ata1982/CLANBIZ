/**
 * オートウェビナー大学 JavaScriptファイル (最適化済み)
 */
(function() {
  'use strict';
  
  // 読み込み完了後に実行
  document.addEventListener('DOMContentLoaded', initPage);
  
  function initPage() {
    // ハンバーガーメニュー初期化
    initHamburgerMenu();
    
    // スムーススクロール初期化
    initSmoothScroll();
    
    // FAQ初期化 (存在する場合のみ)
    initFaq();
    
    // アニメーション初期化 (IntersectionObserverがサポートされている場合のみ)
    initAnimations();
    
    // モバイルメニューの改善
    enhanceMobileMenu();
  }
  
  // ハンバーガーメニューの初期化
  function initHamburgerMenu() {
    const hamburgerBtn = document.querySelector('.hamburger-button');
    if (!hamburgerBtn) return;
    
    const body = document.body;
    const mobileMenu = document.querySelector('.mobile-menu') || createMobileMenu();
    
    hamburgerBtn.addEventListener('click', function() {
      this.classList.toggle('active');
      
      if (mobileMenu) {
        mobileMenu.classList.toggle('active');
        body.classList.toggle('menu-open');
      }
    });
    
    // 画面リサイズ時にモバイルメニューを閉じる
    window.addEventListener('resize', function() {
      if (window.innerWidth > 768 && mobileMenu && mobileMenu.classList.contains('active')) {
        mobileMenu.classList.remove('active');
        hamburgerBtn.classList.remove('active');
        body.classList.remove('menu-open');
      }
    });
  }
  
  // モバイルメニューが存在しない場合に作成する補助関数
  function createMobileMenu() {
    const mobileMenu = document.createElement('div');
    mobileMenu.className = 'mobile-menu';
    document.body.appendChild(mobileMenu);
    
    // グローバルナビゲーションをコピー
    const globalNav = document.querySelector('.global-nav');
    if (globalNav) {
      const navClone = globalNav.cloneNode(true);
      mobileMenu.appendChild(navClone);
    }
    
    // CTAボタンをコピー
    const ctaButtons = document.querySelector('.header-cta');
    if (ctaButtons) {
      const ctaClone = ctaButtons.cloneNode(true);
      mobileMenu.appendChild(ctaClone);
    }
    
    return mobileMenu;
  }
  
  // モバイルメニュー機能強化
  function enhanceMobileMenu() {
    const mobileMenu = document.querySelector('.mobile-menu');
    if (!mobileMenu) return;
    
    const hamburgerBtn = document.querySelector('.hamburger-button');
    const body = document.body;
    
    // モバイルメニュー内のリンクをクリックしたときにメニューを閉じる
    const menuLinks = mobileMenu.querySelectorAll('a');
    menuLinks.forEach(function(link) {
      link.addEventListener('click', function() {
        mobileMenu.classList.remove('active');
        if (hamburgerBtn) hamburgerBtn.classList.remove('active');
        body.classList.remove('menu-open');
      });
    });
  }
  
  // スムーススクロールの初期化
  function initSmoothScroll() {
    const anchorLinks = document.querySelectorAll('a[href^="#"]');
    if (!anchorLinks.length) return;
    
    anchorLinks.forEach(function(link) {
      link.addEventListener('click', handleAnchorClick);
    });
  }
  
  // アンカーリンククリック処理
  function handleAnchorClick(e) {
    const targetId = this.getAttribute('href');
    
    // #だけの場合はトップへスクロール
    if (targetId === '#') {
      e.preventDefault();
      window.scrollTo({
        top: 0,
        behavior: 'smooth'
      });
      return;
    }
    
    const targetElement = document.querySelector(targetId);
    if (!targetElement) return;
    
    e.preventDefault();
    
    // ヘッダーの高さを考慮してスクロール
    const headerHeight = window.innerWidth <= 768 ? 50 : 60;
    const targetPosition = targetElement.getBoundingClientRect().top + window.pageYOffset - headerHeight;
    
    window.scrollTo({
      top: targetPosition,
      behavior: 'smooth'
    });
  }
  
  // FAQアコーディオンの初期化
  function initFaq() {
    const faqItems = document.querySelectorAll('.faq-item');
    if (!faqItems.length) return;
    
    faqItems.forEach(function(item) {
      const question = item.querySelector('.faq-question');
      if (!question) return;
      
      question.addEventListener('click', function() {
        // アクティブクラスをトグル
        item.classList.toggle('active');
        
        // アニメーション用の高さ調整
        const answer = item.querySelector('.faq-answer');
        if (!answer) return;
        
        if (item.classList.contains('active')) {
          answer.style.maxHeight = answer.scrollHeight + 'px';
        } else {
          answer.style.maxHeight = null;
        }
      });
    });
  }
  
  // セクションごとのアニメーション初期化
  function initAnimations() {
    // IntersectionObserverがサポートされていなければ終了
    if (!('IntersectionObserver' in window)) return;
    
    // アニメーション対象要素
    const animElements = document.querySelectorAll('.animate-on-scroll');
    if (!animElements.length) return;
    
    // オブザーバー設定
    const animObserverOptions = {
      root: null,
      rootMargin: '0px',
      threshold: 0.15
    };
    
    // 交差監視
    const animObserver = new IntersectionObserver(handleIntersection, animObserverOptions);
    
    // 読み込み直後はビューポート内の要素をすぐに表示
    animElements.forEach(function(element) {
      // 初期は非表示
      element.classList.add('before-animation');
      
      // 監視対象に追加
      animObserver.observe(element);
      
      // 初期表示時、すでに画面内にある要素をアニメーション表示
      if (isElementInViewport(element)) {
        setTimeout(function() {
          applyAnimation(element);
        }, 200);
      }
    });
  }
  
  // 要素が画面内に入った時の処理
  function handleIntersection(entries, observer) {
    entries.forEach(function(entry) {
      if (entry.isIntersecting) {
        applyAnimation(entry.target);
        // 一度表示された要素は監視解除
        observer.unobserve(entry.target);
      }
    });
  }
  
  // アニメーションを適用
  function applyAnimation(element) {
    element.classList.remove('before-animation');
    element.classList.add('animated');
  }
  
  // 要素が画面内に入っているか判定
  function isElementInViewport(el) {
    const rect = el.getBoundingClientRect();
    return (
      rect.top <= (window.innerHeight || document.documentElement.clientHeight) &&
      rect.bottom >= 0
    );
  }
})();
